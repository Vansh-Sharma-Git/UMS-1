#include <stdio.h>

#define MAX_PROCESSES 50

typedef struct {
    int processID;
    int burstTime;
    int priority;
} Process;

void priorityScheduling(Process processes[], int n) {
    int waitingTime[MAX_PROCESSES] = {0};
    int turnaroundTime[MAX_PROCESSES] = {0};
    int totalWaitingTime = 0;
    int totalTurnaroundTime = 0;

    // Sort processes based on priority (higher priority value means higher priority)
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (processes[j].priority > processes[j + 1].priority) {
                Process temp = processes[j];
                processes[j] = processes[j + 1];
                processes[j + 1] = temp;
            }
        }
    }

    // Calculate waiting time and turnaround time for each process
    waitingTime[0] = 0; // The first process has no waiting time
    for (int i = 1; i < n; i++) {
        waitingTime[i] = waitingTime[i - 1] + processes[i - 1].burstTime;
        totalWaitingTime += waitingTime[i];
    }

    for (int i = 0; i < n; i++) {
        turnaroundTime[i] = waitingTime[i] + processes[i].burstTime;
        totalTurnaroundTime += turnaroundTime[i];
    }

    // Display the scheduling results
    printf("Process\tBurst Time\tPriority\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", processes[i].processID, processes[i].burstTime, processes[i].priority,
               waitingTime[i], turnaroundTime[i]);
    }

    // Calculate average waiting time and average turnaround time
    double avgWaitingTime = (double) totalWaitingTime / n;
    double avgTurnaroundTime = (double) totalTurnaroundTime / n;
    printf("\nAverage Waiting Time: %.2lf\n", avgWaitingTime);
    printf("Average Turnaround Time: %.2lf\n", avgTurnaroundTime);
}

int main() {
    int n;
    Process processes[MAX_PROCESSES];

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    // Input process details
    printf("Enter process details:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d:\n", i + 1);
        processes[i].processID = i + 1;
        printf("Burst Time: ");
        scanf("%d", &processes[i].burstTime);
        printf("Priority: ");
        scanf("%d", &processes[i].priority);
    }

    // Perform Priority Scheduling
    priorityScheduling(processes, n);

    return 0;
}
// This is Code For Priority Que.
